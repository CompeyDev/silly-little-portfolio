---
import Layout from "../layouts/Layout.svelte";
import ProjectItem from "../components/ProjectItem.svelte";
import LinkItem from "../components/LinkItem.svelte";
import Workspace from "../components/Workspace.svelte";
import Branch from "../components/Branch.svelte";
import Language from "../components/Language.svelte";
import { DateTime } from "luxon";
import { getCodeData } from "../lib/rpcUtils";
import type { LanyardData } from "sk-lanyard";

const apiEndpoint = "https://api.lanyard.rest/v1/users/893762371770802227";
const fetchedData = await fetch(apiEndpoint).then((response) =>
	response.json()
);
const data: LanyardData = fetchedData.data;
let codeData = getCodeData(data);
---

<html lang="en">
	<meta charset="utf-8" />
	<link
		rel="icon"
		type="image/x-icon"
		href="https://github.com/CompeyDev.png"
	/>

	<script>
		function genId(): string {
			return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(
				/[xy]/g,
				function (c) {
					var r = (Math.random() * 16) | 0,
						v = c == "x" ? r : (r & 0x3) | 0x8;
					return v.toString(16);
				}
			);
		}

		function mountCurrentlyPlaying(
			musicNameElement: HTMLElement,
			musicNameDiv: HTMLElement,
			name: string
		) {
			musicNameElement.textContent = name;
			musicNameDiv.style.visibility = "visible";

			console.log(
				`audioController/mountCurrentlyPlaying :: Mounted currently playing as ${name}`
			);
		}

		let playNo = 0;

		const songs = [
			{
				name: "Xeon Diversity - Game Start!",
				url: "/assets/music/game_start.mp3",
			},
			{
				name: "Rav - Tamamushi",
				url: "/assets/music/tamamushi.mp3",
			},
			{
				name: "Camellia - Underground Path",
				url: "/assets/music/underground_path.mp3",
			},
			{
				name: "GroovyDominoes52 - Beemix",
				url: "/assets/music/beemix.mp3",
			},
			{
				name: "Toby Fox - Death By Glamour",
				url: "/assets/music/death_by_glamour.mp3",
			},
			{
				name: "Sonic Mania - Hi-Spec Robo Go!",
				url: "/assets/music/hi-spec_robo_go.mp3",
			},
			{
				name: "Earthbound - Buy Somethin' Will ya!",
				url: "/assets/music/buy_something_will_ya.mp3",
			},
		];

		let bgAudio = new Audio();
		bgAudio.src = songs[playNo].url;

		let audioSrc = null;
		let audioAnalyzer = null;

		window.onload = () => {
			const playButton = document.getElementById("PRESS_ME");
			const musicNameElement = document.getElementById("current_music");
			const musicNameDiv = document.getElementById("current_music_div");
			const visualizerCanvas: any = document.getElementById("canvas");
			visualizerCanvas.width = window.innerWidth;
			visualizerCanvas.height = window.innerHeight;

			bgAudio.addEventListener("ended", () => {
				console.log("audioController :: Song ended, moving to next");
				playNo++;

				if (!(playNo >= songs.length)) {
					bgAudio.src = songs[playNo].url;

					bgAudio.currentTime = 0;
					mountCurrentlyPlaying(
						musicNameElement,
						musicNameDiv,
						songs[playNo].name
					);

					bgAudio.play();
				} else {
					console.log(
						"audioController :: No new songs, ending queue!"
					);
					musicNameDiv.remove();
					bgAudio.remove();
					visualizerCanvas.remove();
				}
			});

			playButton.onclick = () => {
				playButton.remove();

				mountCurrentlyPlaying(
					musicNameElement,
					musicNameDiv,
					songs[playNo].name
				);

				const ctx = visualizerCanvas.getContext("2d");

				bgAudio.play();
				let audioCtx = new window.AudioContext();

				audioSrc = audioCtx.createMediaElementSource(bgAudio);
				audioAnalyzer = audioCtx.createAnalyser();
				audioSrc.connect(audioAnalyzer);
				audioAnalyzer.connect(audioCtx.destination);

				audioAnalyzer.fftSize = 128;
				const bufferLength = audioAnalyzer.frequencyBinCount;
				const dataArray = new Uint8Array(bufferLength);
				const barWidth = visualizerCanvas.width / bufferLength;

				let x = 0;
				let animatify = () => {
					const runId = genId();

					console.log(`animatify :: Running render proc ${runId}`);

					x = 0;
					ctx.clearRect(
						0,
						0,
						visualizerCanvas.width,
						visualizerCanvas.height
					);
					audioAnalyzer.getByteFrequencyData(dataArray);
					for (let i = 0; i < bufferLength; i++) {
						const barHeight = dataArray[i];
						ctx.fillStyle = "#cba6f7";
						ctx.fillRect(
							x,
							visualizerCanvas.height - barHeight,
							barWidth,
							barHeight
						);
						x += barWidth;
					}

					// recursion cool
					requestAnimationFrame(animatify);
				};

				animatify();
			};
		};
	</script>

	<script>
		const bob = document.getElementsByClassName("bob")[0];

		if (navigator.userAgentData.mobile) {
			bob.remove();
		}

		document.body.onpointermove = e => {
			const { clientX, clientY } = e;

			bob.animate({
				left: clientX + "px",
				top: clientY + "px"
			}, { duration: 2500, fill: "forwards" });
		}

		document.onclick = () => {
			console.log('hi, im bob! :3')

			bob.animate({
				transform: "scale(1.5) scale(1)"
			}, { duration: 50 });
		}
	</script>

	<astro:head>
		<title>silly little portfolio</title>
		<!-- 		<meta charset="utf-8" />
		<meta name="og:title" content="silly little portfolio" />
		<meta name="description" content="just a tad bit of tomfoolery" />
		<meta name="og:description" content="just a tad bit of tomfoolery" />
		<meta name="theme-color" media="(prefers-color-scheme: light)" content="#f9f0f5" />
		<meta name="theme-color" media="(prefers-color-scheme: dark)" content="#281c21" /> -->
	</astro:head>

	<span class="bob" />
	<Layout leftAlign={false}>
		<div id="container">
			<canvas id="canvas"></canvas>
			<audio id="audio"></audio>
		</div>
		<div
			class="overflow-x-hidden overflow-y-hidden"
			style="width: 100vw; height: 100vh; position: fixed; top: 0; left: 0; z-index: 999"
		>
			<div
				id="current_music_div"
				style="text-align: right; visibility: hidden;"
			>
				<img
					style="float: right; padding-right: 5px; align: right;"
					src="/assets/icons/rsz_currently-playing-music-note-8-bit.gif"
				/>
				<p style="padding-top: 5px;" id="current_music"></p>
			</div>
			<section
				class="p-8 sm:p-12 lg:p-24 lg:py-16 font-cascadia z-10 flex flex-col sm:flex-row gap-y-10 justify-center grid place-items-center h-screen"
			>
				<div class="flex flex-col gap-7">
					<div>
						<h1 class="text-ocean-700 dark:text-ocean-300">
							<span class="dark:text-ocean-blue">compey</span>
							<Workspace workspace={codeData?.workspace} />
							<Branch name={codeData?.branch} />
							<Language lang={codeData?.lang} />
						</h1>
						<br />
						<h1 class="text-ocean-900 dark:text-ocean-100 heading">
							projects
						</h1>
						<ul
							class="list-disc list-inside text-ocean-700 dark:text-ocean-blue"
						>
							<ProjectItem
								href="https://datalink.dev"
								name="datalink"
								description="lightweight & futuristic analytics platform"
							/>
							<ProjectItem
								href="https://github.com/flightpkg"
								name="flightpkg"
								description="package manager of the future"
							/>
							<ProjectItem
								href="https://github.com/CompeyDev/bvm"
								name="bvm"
								description="bun version manager"
							/>
							<ProjectItem
								href="https://github.com/CompeyDev/create-guilded-bot"
								name="create-guilded-bot"
								description="guilded bot bootstrapper & framework"
							/>
							<ProjectItem
								href="https://github.com/CompeyDev/roblox.js"
								name="roblox.js"
								description="roblox opencloud js wrapper"
							/>
							<ProjectItem
								href="https://github.com/CompeyDev/discord-status-action"
								name="discord-status-action"
								description="discord status emoji using GitHub Actions"
							/>
							<ProjectItem
								href="https://github.com/CompeyDev/rojo-build-action"
								name="rojo-build-action"
								description="build rojo projects using GitHub actions"
							/>
							<ProjectItem
								href="https://github.com/CompeyDev/nemo"
								name="nemo"
								description="offensive post-exploitation Framework"
							/>
							<ProjectItem
								href="https://github.com/CompeyDev/signals-rs"
								name="signals-rs"
								description="lua(u)-inspired implementation of signals in rust"
							/>
							<ProjectItem
								href="https://github.com/CompeyDev/tomfoolery"
								name="tomfoolery"
								description="troll discord AI chatbot"
							/>
							<ProjectItem
								href="https://github.com/CompeyDev/makegen"
								name="makegen"
								description="a dynamic makefile generator"
							/>
							<ProjectItem
								href="https://github.com/CompeyDev/luau-asm"
								name="luau-asm"
								description="tiny mock asm set in luau"
							/>
							<ProjectItem
								href="https://github.com/CompeyDev/bf-rs"
								name="bf-rs"
								description="simple brainf*ck interpreter in rust"
							/>
						</ul>
					</div>
					<div>
						<h1 class="text-ocean-900 dark:text-ocean-100 heading">
							links
						</h1>
						<ul
							class="list-disc list-inside text-ocean-700 dark:text-ocean-blue"
						>
							<LinkItem
								href="https://blog.devcomp.xyz"
								name="blog"
							/>
							<LinkItem
								href="https://twitter.com/DevComp_"
								name="twitter"
							/>
							<LinkItem
								href="https://mas.to/@DevComp"
								name="mastodon"
							/>
							<LinkItem
								href="https://github.com/CompeyDev"
								name="github"
							/>
							<LinkItem
								href="mailto:hi@devcomp.xyz"
								name="email"
							/>
						</ul>
					</div>
					<button
						class="text-ocean-900 dark:text-ocean-300 flex flex-col items-start sm:items-end gap-3 sm:gap-7 sm:text-right flash"
						id="PRESS_ME"
						style="font-weight: bolder"
					>
						PLAY!
					</button>
				</div>
			</section>
		</div>
	</Layout>

</html>
