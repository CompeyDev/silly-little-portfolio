---
import Layout from "../layouts/Layout.svelte";
import ProjectItem from "../components/ProjectItem.svelte";
import SocialLink from "../components/SocialLink.svelte";
import Workspace from "../components/Workspace.svelte";
import Branch from "../components/Branch.svelte";
import Language from "../components/Language.svelte";
import { DateTime } from "luxon";
import { getCodeData, getOtherActivities } from "../lib/rpcUtils";
import type { LanyardData } from "sk-lanyard";
import TimeValue from "../components/TimeValue.svelte";
import Waveform from "../components/AudioVisualizer";

const apiEndpoint = "https://api.lanyard.rest/v1/users/893762371770802227";
const fetchedData = await fetch(apiEndpoint).then((response) => response.json());
const data: LanyardData = fetchedData.data;
let codeData = getCodeData(data);
---

<html lang="en">
	<meta charset="utf-8" />
	<script lang="ts">
		function genId() {
			return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (c) {
				var r = (Math.random() * 16) | 0,
					v = c == "x" ? r : (r & 0x3) | 0x8;
				return v.toString(16);
			});
		}

		let gameStart = new Audio();
		gameStart.src = "/game_start.mp3";
		let audioSrc = null;
		let audioAnalyzer = null;

		window.onload = () => {
			const playButton = document.getElementById("PRESS_ME");

			playButton.onclick = () => {
				playButton.remove();
				const visualizerCanvas = document.getElementById("canvas");
				visualizerCanvas.width = window.innerWidth;
				visualizerCanvas.height = window.innerHeight;

				const ctx = visualizerCanvas.getContext("2d");

				gameStart.play();
				let audioCtx = new window.AudioContext();

				audioSrc = audioCtx.createMediaElementSource(gameStart);
				audioAnalyzer = audioCtx.createAnalyser();
				audioSrc.connect(audioAnalyzer);
				audioAnalyzer.connect(audioCtx.destination);

				audioAnalyzer.fftSize = 128;
				const bufferLength = audioAnalyzer.frequencyBinCount;
				const dataArray = new Uint8Array(bufferLength);
				const barWidth = canvas.width / bufferLength;

				let x = 0;
				let animationController = () => {
					const runId = genId();

					console.log(`animationController :: Running render proc ${runId}`);

					x = 0;
					ctx.clearRect(0, 0, canvas.width, canvas.height);
					audioAnalyzer.getByteFrequencyData(dataArray);
					for (let i = 0; i < bufferLength; i++) {
						barHeight = dataArray[i];
						ctx.fillStyle = "purple";
						ctx.fillRect(x, canvas.height - barHeight, barWidth, barHeight);
						x += barWidth;
					}

					// recursion cool
					requestAnimationFrame(animationController);
				};

				animationController();
			};
		};
	</script>
	<astro:head>
		<title>silly little portfolio</title>
		<meta charset="utf-8" />
		<meta name="og:title" content="portfolio" />
		<meta name="description" content="a collection of various things" />
		<meta name="og:description" content="a collection of various things" />
		<meta name="theme-color" media="(prefers-color-scheme: light)" content="#f9f0f5" />
		<meta name="theme-color" media="(prefers-color-scheme: dark)" content="#281c21" />
	</astro:head>

	<Layout leftAlign={false}>
		<div id="container">
			<canvas id="canvas"></canvas>
			<audio id="audio"></audio>
		</div>
		<div
			class="overflow-x-hidden overflow-y-hidden"
			style="width: 100vw; height: 100vh; position: fixed; top: 0; left: 0; z-index: 999"
		>
			<section
				class="p-8 sm:p-12 lg:p-24 lg:py-16 font-cascadia z-10 flex flex-col sm:flex-row gap-y-10 justify-center grid place-items-center h-screen"
			>
				<div class="flex flex-col gap-7">
					<div>
						<h1 class="text-ocean-700 dark:text-ocean-300">
							<span class="dark:text-ocean-blue">compey</span>
							<Workspace workspace={codeData?.workspace} />
							<Branch name={codeData?.branch} />
							<Language lang={codeData?.lang} />
						</h1>
						<br />
						<h1 class="text-ocean-900 dark:text-ocean-100 heading">projects</h1>
						<ul class="list-disc list-inside text-ocean-700 dark:text-ocean-blue">
							<ProjectItem
								href="https://datalink.dev"
								name="datalink"
								description="lightweight & futuristic analytics platform"
							/>
							<ProjectItem
								href="https://github.com/flightpkg"
								name="flightpkg"
								description="package manager of the future"
							/>
							<ProjectItem
								href="https://github.com/CompeyDev/bvm"
								name="bvm"
								description="bun version manager"
							/>
							<ProjectItem
								href="https://github.com/CompeyDev/create-guilded-bot"
								name="create-guilded-bot"
								description="guilded bot bootstrapper & framework"
							/>
							<ProjectItem
								href="https://github.com/CompeyDev/roblox.js"
								name="roblox.js"
								description="roblox opencloud js wrapper"
							/>
							<ProjectItem
								href="https://github.com/CompeyDev/discord-status-action"
								name="discord-status-action"
								description="discord status emoji using GitHub Actions"
							/>
							<ProjectItem
								href="https://github.com/CompeyDev/rojo-build-action"
								name="rojo-build-action"
								description="build rojo projects using GitHub actions"
							/>
						</ul>
					</div>
					<div>
						<h1 class="text-ocean-900 dark:text-ocean-100 heading">links</h1>
						<ul class="list-disc list-inside text-ocean-700 dark:text-ocean-blue">
							<SocialLink href="https://twitter.com/DevComp_" name="twitter" />
							<SocialLink href="https://github.com/CompeyDev" name="github" />
							<SocialLink href="mailto:hi@devcomp.xyz" name="email" />
						</ul>
					</div>
					<button
						class="text-ocean-900 dark:text-ocean-300 flex flex-col items-start sm:items-end gap-3 sm:gap-7 sm:text-right flash"
						id="PRESS_ME"
						style="font-weight: bolder"
					>
						PLAY!
					</button>
				</div>
			</section>
		</div>
	</Layout>
</html>
